//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("More.Application.Entity", "FK_RuleBookRules_RuleBooks", "RuleBook", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(More.Application.Entity.RuleBook), "RuleBookRule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(More.Application.Entity.RuleBookRule), true)]

#endregion

namespace More.Application.Entity
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MoreEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MoreEntities object using the connection string found in the 'MoreEntities' section of the application configuration file.
        /// </summary>
        public MoreEntities() : base("name=MoreEntities", "MoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MoreEntities object.
        /// </summary>
        public MoreEntities(string connectionString) : base(connectionString, "MoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MoreEntities object.
        /// </summary>
        public MoreEntities(EntityConnection connection) : base(connection, "MoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RuleAssembly> RuleAssemblies
        {
            get
            {
                if ((_RuleAssemblies == null))
                {
                    _RuleAssemblies = base.CreateObjectSet<RuleAssembly>("RuleAssemblies");
                }
                return _RuleAssemblies;
            }
        }
        private ObjectSet<RuleAssembly> _RuleAssemblies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RuleBookRule> RuleBookRules
        {
            get
            {
                if ((_RuleBookRules == null))
                {
                    _RuleBookRules = base.CreateObjectSet<RuleBookRule>("RuleBookRules");
                }
                return _RuleBookRules;
            }
        }
        private ObjectSet<RuleBookRule> _RuleBookRules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RuleBook> RuleBooks
        {
            get
            {
                if ((_RuleBooks == null))
                {
                    _RuleBooks = base.CreateObjectSet<RuleBook>("RuleBooks");
                }
                return _RuleBooks;
            }
        }
        private ObjectSet<RuleBook> _RuleBooks;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RuleAssemblies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRuleAssemblies(RuleAssembly ruleAssembly)
        {
            base.AddObject("RuleAssemblies", ruleAssembly);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RuleBookRules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRuleBookRules(RuleBookRule ruleBookRule)
        {
            base.AddObject("RuleBookRules", ruleBookRule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RuleBooks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRuleBooks(RuleBook ruleBook)
        {
            base.AddObject("RuleBooks", ruleBook);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="effectiveDate">No Metadata Documentation available.</param>
        public ObjectResult<RuleBookRule> GetRuleBookRules(Nullable<global::System.DateTime> effectiveDate)
        {
            ObjectParameter effectiveDateParameter;
            if (effectiveDate.HasValue)
            {
                effectiveDateParameter = new ObjectParameter("EffectiveDate", effectiveDate);
            }
            else
            {
                effectiveDateParameter = new ObjectParameter("EffectiveDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<RuleBookRule>("GetRuleBookRules", effectiveDateParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="effectiveDate">No Metadata Documentation available.</param>
        public ObjectResult<RuleBookRule> GetRuleBookRules(Nullable<global::System.DateTime> effectiveDate, MergeOption mergeOption)
        {
            ObjectParameter effectiveDateParameter;
            if (effectiveDate.HasValue)
            {
                effectiveDateParameter = new ObjectParameter("EffectiveDate", effectiveDate);
            }
            else
            {
                effectiveDateParameter = new ObjectParameter("EffectiveDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<RuleBookRule>("GetRuleBookRules", mergeOption, effectiveDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="effectiveDate">No Metadata Documentation available.</param>
        /// <param name="rulebookId">No Metadata Documentation available.</param>
        public ObjectResult<RuleBookRule> GetRuleBookRulesByRuleBook(Nullable<global::System.DateTime> effectiveDate, Nullable<global::System.Int32> rulebookId)
        {
            ObjectParameter effectiveDateParameter;
            if (effectiveDate.HasValue)
            {
                effectiveDateParameter = new ObjectParameter("EffectiveDate", effectiveDate);
            }
            else
            {
                effectiveDateParameter = new ObjectParameter("EffectiveDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter rulebookIdParameter;
            if (rulebookId.HasValue)
            {
                rulebookIdParameter = new ObjectParameter("RulebookId", rulebookId);
            }
            else
            {
                rulebookIdParameter = new ObjectParameter("RulebookId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<RuleBookRule>("GetRuleBookRulesByRuleBook", effectiveDateParameter, rulebookIdParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="effectiveDate">No Metadata Documentation available.</param>
        /// <param name="rulebookId">No Metadata Documentation available.</param>
        public ObjectResult<RuleBookRule> GetRuleBookRulesByRuleBook(Nullable<global::System.DateTime> effectiveDate, Nullable<global::System.Int32> rulebookId, MergeOption mergeOption)
        {
            ObjectParameter effectiveDateParameter;
            if (effectiveDate.HasValue)
            {
                effectiveDateParameter = new ObjectParameter("EffectiveDate", effectiveDate);
            }
            else
            {
                effectiveDateParameter = new ObjectParameter("EffectiveDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter rulebookIdParameter;
            if (rulebookId.HasValue)
            {
                rulebookIdParameter = new ObjectParameter("RulebookId", rulebookId);
            }
            else
            {
                rulebookIdParameter = new ObjectParameter("RulebookId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<RuleBookRule>("GetRuleBookRulesByRuleBook", mergeOption, effectiveDateParameter, rulebookIdParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="More.Application.Entity", Name="RuleAssembly")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RuleAssembly : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RuleAssembly object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="assemblyName">Initial value of the AssemblyName property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="published">Initial value of the Published property.</param>
        public static RuleAssembly CreateRuleAssembly(global::System.Int32 id, global::System.String assemblyName, global::System.DateTime effectiveDate, global::System.Boolean published)
        {
            RuleAssembly ruleAssembly = new RuleAssembly();
            ruleAssembly.Id = id;
            ruleAssembly.AssemblyName = assemblyName;
            ruleAssembly.EffectiveDate = effectiveDate;
            ruleAssembly.Published = published;
            return ruleAssembly;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssemblyName
        {
            get
            {
                return _AssemblyName;
            }
            set
            {
                OnAssemblyNameChanging(value);
                ReportPropertyChanging("AssemblyName");
                _AssemblyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AssemblyName");
                OnAssemblyNameChanged();
            }
        }
        private global::System.String _AssemblyName;
        partial void OnAssemblyNameChanging(global::System.String value);
        partial void OnAssemblyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Published
        {
            get
            {
                return _Published;
            }
            set
            {
                OnPublishedChanging(value);
                ReportPropertyChanging("Published");
                _Published = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Published");
                OnPublishedChanged();
            }
        }
        private global::System.Boolean _Published;
        partial void OnPublishedChanging(global::System.Boolean value);
        partial void OnPublishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastCompileDate
        {
            get
            {
                return _LastCompileDate;
            }
            set
            {
                OnLastCompileDateChanging(value);
                ReportPropertyChanging("LastCompileDate");
                _LastCompileDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastCompileDate");
                OnLastCompileDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastCompileDate;
        partial void OnLastCompileDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastCompileDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="More.Application.Entity", Name="RuleBook")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RuleBook : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RuleBook object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="changeId">Initial value of the ChangeId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static RuleBook CreateRuleBook(global::System.Int32 id, global::System.String name, global::System.Guid changeId, global::System.DateTime effectiveDate, global::System.Boolean active)
        {
            RuleBook ruleBook = new RuleBook();
            ruleBook.Id = id;
            ruleBook.Name = name;
            ruleBook.ChangeId = changeId;
            ruleBook.EffectiveDate = effectiveDate;
            ruleBook.Active = active;
            return ruleBook;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChangeId
        {
            get
            {
                return _ChangeId;
            }
            set
            {
                OnChangeIdChanging(value);
                ReportPropertyChanging("ChangeId");
                _ChangeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeId");
                OnChangeIdChanged();
            }
        }
        private global::System.Guid _ChangeId;
        partial void OnChangeIdChanging(global::System.Guid value);
        partial void OnChangeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> BaseChangeId
        {
            get
            {
                return _BaseChangeId;
            }
            set
            {
                OnBaseChangeIdChanging(value);
                ReportPropertyChanging("BaseChangeId");
                _BaseChangeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaseChangeId");
                OnBaseChangeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _BaseChangeId;
        partial void OnBaseChangeIdChanging(Nullable<global::System.Guid> value);
        partial void OnBaseChangeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("More.Application.Entity", "FK_RuleBookRules_RuleBooks", "RuleBookRule")]
        public EntityCollection<RuleBookRule> RuleBookRules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RuleBookRule>("More.Application.Entity.FK_RuleBookRules_RuleBooks", "RuleBookRule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RuleBookRule>("More.Application.Entity.FK_RuleBookRules_RuleBooks", "RuleBookRule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="More.Application.Entity", Name="RuleBookRule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RuleBookRule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RuleBookRule object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="ruleBookId">Initial value of the RuleBookId property.</param>
        public static RuleBookRule CreateRuleBookRule(global::System.Int64 id, global::System.DateTime effectiveDate, global::System.String name, global::System.Boolean active, global::System.Int32 ruleBookId)
        {
            RuleBookRule ruleBookRule = new RuleBookRule();
            ruleBookRule.Id = id;
            ruleBookRule.EffectiveDate = effectiveDate;
            ruleBookRule.Name = name;
            ruleBookRule.Active = active;
            ruleBookRule.RuleBookId = ruleBookId;
            return ruleBookRule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ChangeId
        {
            get
            {
                return _ChangeId;
            }
            set
            {
                OnChangeIdChanging(value);
                ReportPropertyChanging("ChangeId");
                _ChangeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeId");
                OnChangeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ChangeId;
        partial void OnChangeIdChanging(Nullable<global::System.Guid> value);
        partial void OnChangeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RuleExpression
        {
            get
            {
                return _RuleExpression;
            }
            set
            {
                OnRuleExpressionChanging(value);
                ReportPropertyChanging("RuleExpression");
                _RuleExpression = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RuleExpression");
                OnRuleExpressionChanged();
            }
        }
        private global::System.String _RuleExpression;
        partial void OnRuleExpressionChanging(global::System.String value);
        partial void OnRuleExpressionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentChangeId
        {
            get
            {
                return _ParentChangeId;
            }
            set
            {
                OnParentChangeIdChanging(value);
                ReportPropertyChanging("ParentChangeId");
                _ParentChangeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentChangeId");
                OnParentChangeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentChangeId;
        partial void OnParentChangeIdChanging(Nullable<global::System.Guid> value);
        partial void OnParentChangeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                OnTagChanging(value);
                ReportPropertyChanging("Tag");
                _Tag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tag");
                OnTagChanged();
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Context
        {
            get
            {
                return _Context;
            }
            set
            {
                OnContextChanging(value);
                ReportPropertyChanging("Context");
                _Context = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Context");
                OnContextChanged();
            }
        }
        private global::System.String _Context;
        partial void OnContextChanging(global::System.String value);
        partial void OnContextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RuleBookId
        {
            get
            {
                return _RuleBookId;
            }
            set
            {
                OnRuleBookIdChanging(value);
                ReportPropertyChanging("RuleBookId");
                _RuleBookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RuleBookId");
                OnRuleBookIdChanged();
            }
        }
        private global::System.Int32 _RuleBookId;
        partial void OnRuleBookIdChanging(global::System.Int32 value);
        partial void OnRuleBookIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("More.Application.Entity", "FK_RuleBookRules_RuleBooks", "RuleBook")]
        public RuleBook RuleBook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RuleBook>("More.Application.Entity.FK_RuleBookRules_RuleBooks", "RuleBook").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RuleBook>("More.Application.Entity.FK_RuleBookRules_RuleBooks", "RuleBook").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RuleBook> RuleBookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RuleBook>("More.Application.Entity.FK_RuleBookRules_RuleBooks", "RuleBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RuleBook>("More.Application.Entity.FK_RuleBookRules_RuleBooks", "RuleBook", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="More.Application.Entity", Name="GetRuleBookRulesByRuleBook_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetRuleBookRulesByRuleBook_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetRuleBookRulesByRuleBook_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="ruleBookId">Initial value of the RuleBookId property.</param>
        public static GetRuleBookRulesByRuleBook_Result CreateGetRuleBookRulesByRuleBook_Result(global::System.Int64 id, global::System.DateTime effectiveDate, global::System.String name, global::System.Boolean active, global::System.Int32 ruleBookId)
        {
            GetRuleBookRulesByRuleBook_Result getRuleBookRulesByRuleBook_Result = new GetRuleBookRulesByRuleBook_Result();
            getRuleBookRulesByRuleBook_Result.Id = id;
            getRuleBookRulesByRuleBook_Result.EffectiveDate = effectiveDate;
            getRuleBookRulesByRuleBook_Result.Name = name;
            getRuleBookRulesByRuleBook_Result.Active = active;
            getRuleBookRulesByRuleBook_Result.RuleBookId = ruleBookId;
            return getRuleBookRulesByRuleBook_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ChangeId
        {
            get
            {
                return _ChangeId;
            }
            set
            {
                OnChangeIdChanging(value);
                ReportPropertyChanging("ChangeId");
                _ChangeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeId");
                OnChangeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ChangeId;
        partial void OnChangeIdChanging(Nullable<global::System.Guid> value);
        partial void OnChangeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RuleExpression
        {
            get
            {
                return _RuleExpression;
            }
            set
            {
                OnRuleExpressionChanging(value);
                ReportPropertyChanging("RuleExpression");
                _RuleExpression = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RuleExpression");
                OnRuleExpressionChanged();
            }
        }
        private global::System.String _RuleExpression;
        partial void OnRuleExpressionChanging(global::System.String value);
        partial void OnRuleExpressionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentChangeId
        {
            get
            {
                return _ParentChangeId;
            }
            set
            {
                OnParentChangeIdChanging(value);
                ReportPropertyChanging("ParentChangeId");
                _ParentChangeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentChangeId");
                OnParentChangeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentChangeId;
        partial void OnParentChangeIdChanging(Nullable<global::System.Guid> value);
        partial void OnParentChangeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                OnTagChanging(value);
                ReportPropertyChanging("Tag");
                _Tag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tag");
                OnTagChanged();
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Context
        {
            get
            {
                return _Context;
            }
            set
            {
                OnContextChanging(value);
                ReportPropertyChanging("Context");
                _Context = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Context");
                OnContextChanged();
            }
        }
        private global::System.String _Context;
        partial void OnContextChanging(global::System.String value);
        partial void OnContextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RuleBookId
        {
            get
            {
                return _RuleBookId;
            }
            set
            {
                OnRuleBookIdChanging(value);
                ReportPropertyChanging("RuleBookId");
                _RuleBookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RuleBookId");
                OnRuleBookIdChanged();
            }
        }
        private global::System.Int32 _RuleBookId;
        partial void OnRuleBookIdChanging(global::System.Int32 value);
        partial void OnRuleBookIdChanged();

        #endregion

    }

    #endregion

    
}
